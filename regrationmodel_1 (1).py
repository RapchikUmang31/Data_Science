# -*- coding: utf-8 -*-
"""RegrationModel_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UJbMLKMf2-p-BqgMqdgNdBgDa80-3gnk
"""







import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics
import numpy as np


df= pd.read_csv('/content/drive/My Drive/Data/OnlineNewsPopularity.csv')



"""For cheking the correlation between the two parameter..."""

import matplotlib.pyplot as plt
dia_x=np.array(df.iloc[:,2])
#print(type(dia_x))
dia_y=np.array(df.iloc[:,-1])
df.plot(kind='scatter',x=dia_x,y=dia_y,color='blue',alpha=0.3,title='Correlation between no of words in data and shre')
plt.show()









#for col in df.columns: 
#    print(col) 

#df.info()
df.drop_duplicates(inplace=True)
df.dropna(inplace=True)
#print(df.head())
#print(df.duplicated())


X = df.iloc[:,2:-2]
X.head()
Y = df.iloc[:,-1]
Y.head()

X_train, X_test, y_train, y_test = train_test_split(X ,Y,test_size=0.3,random_state=42)

#print(X_train.shape)
#print(X_test.shape)

regressor = LinearRegression()     # Create a scikit learn LinearRegression object
regressor.fit(X_train, y_train)

y_pred=regressor.predict(X_test)
#y_pred
#Y


print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))
print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))
print('Mean absolute error: ',metrics.mean_absolute_error(y_test, y_pred))
print('R^2: ',metrics.r2_score(y_test, y_pred))


pred_df=pd.DataFrame(y_pred)
pred_df

# print("Y pridiction is "+ str(y_pred) + " And actul y is "+ str(Y))



